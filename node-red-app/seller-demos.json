[
    {
        "id": "ac6e16ef.6f7d8",
        "type": "tab",
        "label": "Front End Flow",
        "disabled": false,
        "info": "What this is intended to do is help answer a question I and my colleagues get asked a lot, which is \"When does this IBM Power System stop being sold/reach end of support?\".\r\n\r\nSo, my first pass at this helps answer that question.\r\n\r\nI am running this version in a Docker Container on an IBM Power System.\r\n\r\nIt should also work elsewhere, but you will need the Python scripts and the libraries they use installed in your image."
    },
    {
        "id": "ecd3cb95e344f46a",
        "type": "ssh-conf",
        "ssh": "",
        "name": "cecuser on AIX PowerVS instance",
        "userlabel": "cecuser on AIX PowerVS instance"
    },
    {
        "id": "16f9794.a9b9187",
        "type": "http in",
        "z": "ac6e16ef.6f7d8",
        "name": "BOT REST API",
        "url": "/seller_logic",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 200,
        "wires": [
            [
                "8788f7d6d101f120"
            ]
        ]
    },
    {
        "id": "636050ff.385e58",
        "type": "http response",
        "z": "ac6e16ef.6f7d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1130,
        "y": 280,
        "wires": []
    },
    {
        "id": "6cdc89f2.8e9578",
        "type": "comment",
        "z": "ac6e16ef.6f7d8",
        "name": "Conversation REST API",
        "info": "",
        "x": 140,
        "y": 140,
        "wires": []
    },
    {
        "id": "feb6bafb.c6ded8",
        "type": "debug",
        "z": "ac6e16ef.6f7d8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 2020,
        "y": 380,
        "wires": []
    },
    {
        "id": "34dfc367.89d68c",
        "type": "http in",
        "z": "ac6e16ef.6f7d8",
        "name": "Healthcheck URL",
        "url": "/healthz",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 860,
        "wires": [
            [
                "8b2314a3.f7adf"
            ]
        ]
    },
    {
        "id": "2c990b94.1acf3c",
        "type": "http response",
        "z": "ac6e16ef.6f7d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 470,
        "y": 860,
        "wires": []
    },
    {
        "id": "8b2314a3.f7adf",
        "type": "template",
        "z": "ac6e16ef.6f7d8",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "ok",
        "output": "str",
        "x": 300,
        "y": 860,
        "wires": [
            [
                "2c990b94.1acf3c"
            ]
        ]
    },
    {
        "id": "a5338fe4.fce08",
        "type": "comment",
        "z": "ac6e16ef.6f7d8",
        "name": "Healthcheck endpoint",
        "info": "",
        "x": 120,
        "y": 820,
        "wires": []
    },
    {
        "id": "51762601bc13ecc1",
        "type": "template",
        "z": "ac6e16ef.6f7d8",
        "name": "HTML Template picking demo",
        "field": "payload.botresponse.messageout.output.text",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{#payload.botresponse.messageout.output.text}}\n<br>{{.}}\n{{/payload.botresponse.messageout.output.text}}\n<p>Hello. I am a little tool, built by David Spurway using OpenShift on IBM Power, to help you run some demos on IBM Power. They are designed to help build your confidence around modernisation with IBM Power, so you can talk to your customers about this topic. Where possible, I will take care of the overly techie bits, like typing on the command line, and let you focus instead on the business benefits!</p>\n<p>IBM is about \"Show not tell\", but that is not always easy with IBM Power. As a Seller, you may not have experience of some of the more modern things we want our customer to do with IBM Power. So, I have a range of demos you can use to build your confidence with those topics. You should be focused on business benefit, not command line tech, so, these demos are built with that focus. Pick a demo option to begin, from this list:</p>\n<button onclick='document.getElementById(\"id_chattext\").value=\"Pop on Python\";onChatClick();'>Pop on Python</button>\n<button onclick='document.getElementById(\"id_chattext\").value=\"Patch IBM Power\";onChatClick();'>Patch IBM Power</button>\n<button onclick='document.getElementById(\"id_chattext\").value=\"Upgrade IBM Power\";onChatClick();'>Upgrade IBM Power</button>\n<button onclick='document.getElementById(\"id_chattext\").value=\"AI on IBM Power\";onChatClick();'>AI on IBM Power</button>",
        "output": "str",
        "x": 830,
        "y": 240,
        "wires": [
            [
                "636050ff.385e58"
            ]
        ]
    },
    {
        "id": "7417a2d2b537c9a2",
        "type": "switch",
        "z": "ac6e16ef.6f7d8",
        "name": "Check for hello",
        "property": "payload.msgdata",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Hello",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "Hello",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 160,
        "y": 260,
        "wires": [
            [
                "51762601bc13ecc1"
            ],
            [
                "914af2cc49ffe895"
            ]
        ]
    },
    {
        "id": "ef87c83bd27dc292",
        "type": "template",
        "z": "ac6e16ef.6f7d8",
        "name": "HTML Template picking Pop on Power asset",
        "field": "payload.botresponse.messageout.output.text",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{#payload.botresponse.messageout.output.text}}\n<br>{{.}}\n{{/payload.botresponse.messageout.output.text}}\n<p>So, you want to pop Python onto IBM Power. We can do this using our own Techzone, so you can do this without any risk. Before we move on with the demo, it may help to set out the customer challenge we are addressing here, how adding Python (and other Open Source packages) onto IBM Power can help and what the next steps are after that. So, pick one of the follow options to learn more, or move on to the demo:</p>\n<button onclick='document.getElementById(\"id_chattext\").value=\"Pop on Python Video\";onChatClick();'>Quick video explaining the 1-pager</button>\n<button onclick='document.getElementById(\"id_chattext\").value=\"Pop on Python 1-Pager\";onChatClick();'>1-pager for you to use with your customers</button>\n<button onclick='document.getElementById(\"id_chattext\").value=\"Pop on Python Demo\";onChatClick();onDemoClick();'>The demo itself</button>\n",
        "output": "str",
        "x": 870,
        "y": 280,
        "wires": [
            [
                "636050ff.385e58"
            ]
        ]
    },
    {
        "id": "6f79fb2dd35de9e3",
        "type": "template",
        "z": "ac6e16ef.6f7d8",
        "name": "HTML Template Pop on Power Video",
        "field": "payload.botresponse.messageout.output.text",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{#payload.botresponse.messageout.output.text}}\n<br>{{.}}\n{{/payload.botresponse.messageout.output.text}}\n{{#url}}\n<video width=\"600\" controls autoplay>\n  <source src={{.}} type=\"video/mp4\">\n</video>\n{{/url}}\n<p>What would you like to do next? Maybe check out the 1-pager, or move on to the demo:</p>\n<button onclick='document.getElementById(\"id_chattext\").value=\"\";onChatClick();'>Back to the start</button>\n<button onclick='document.getElementById(\"id_chattext\").value=\"Pop on Python 1-Pager\";onChatClick();'>1-pager for you to use with your customers</button>\n<button onclick='document.getElementById(\"id_chattext\").value=\"Pop on Python Demo\";onChatClick();'>The demo itself</button>\n",
        "output": "str",
        "x": 850,
        "y": 320,
        "wires": [
            [
                "636050ff.385e58"
            ]
        ]
    },
    {
        "id": "8788f7d6d101f120",
        "type": "function",
        "z": "ac6e16ef.6f7d8",
        "name": "Set demo",
        "func": "msg.demo = \"\";\n\nmsgdata = msg.payload.msgdata;\n\ndemos = [\"\", \"Pop on Python\", \"Patch IBM Power\", \"Upgrade IBM Power\", \"AI on IBM Power\"];\n\nlet i = 0\n\nwhile (i < demos.length) {\n    if (msgdata.includes(demos[i])) {\n        msg.demo = demos[i];\n    } \n    i++;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 200,
        "wires": [
            [
                "e6c7141db3188fe3"
            ]
        ]
    },
    {
        "id": "e6c7141db3188fe3",
        "type": "function",
        "z": "ac6e16ef.6f7d8",
        "name": "Set asset",
        "func": "msg.asset = \"\";\n\nmsgdata = msg.payload.msgdata;\n\nassets = [\"\", \"Video\", \"1-Pager\", \"Demo\"];\n\nlet i = 0\n\nwhile (i < assets.length) {\n    if (msgdata.includes(assets[i])) {\n        msg.asset = assets[i];\n    } \n    i++;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 200,
        "wires": [
            [
                "7417a2d2b537c9a2"
            ]
        ]
    },
    {
        "id": "14c99c0b7b1b5b07",
        "type": "switch",
        "z": "ac6e16ef.6f7d8",
        "name": "Check which asset",
        "property": "asset",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Video",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1-Pager",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Demo",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "Demo",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 150,
        "y": 360,
        "wires": [
            [
                "9a3ee1425bdabb32"
            ],
            [],
            [
                "31c3f56b70d7e066"
            ],
            []
        ]
    },
    {
        "id": "914af2cc49ffe895",
        "type": "switch",
        "z": "ac6e16ef.6f7d8",
        "name": "Check for asset",
        "property": "asset",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 360,
        "y": 280,
        "wires": [
            [
                "ef87c83bd27dc292"
            ],
            [
                "14c99c0b7b1b5b07"
            ]
        ]
    },
    {
        "id": "9a3ee1425bdabb32",
        "type": "switch",
        "z": "ac6e16ef.6f7d8",
        "name": "Check which demo video",
        "property": "demo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Pop on Python",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Patch IBM Power",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Upgrade IBM Power",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "AI on IBM Power",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 390,
        "y": 360,
        "wires": [
            [
                "fd0c224fb341792b"
            ],
            [],
            [],
            []
        ]
    },
    {
        "id": "fd0c224fb341792b",
        "type": "function",
        "z": "ac6e16ef.6f7d8",
        "name": "Set url for video",
        "func": "url=\"https://seller-demo-images.s3.us-east.cloud-object-storage.appdomain.cloud/No%20Mr%20Bond%20I%20Expect%20You%20To%20Modernize.mp4\"\nmsg.url = \"\"\nmsg.url = url\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 340,
        "wires": [
            [
                "6f79fb2dd35de9e3"
            ]
        ]
    },
    {
        "id": "31c3f56b70d7e066",
        "type": "switch",
        "z": "ac6e16ef.6f7d8",
        "name": "Check which demo",
        "property": "demo",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Pop on Python",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Patch IBM Power",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Upgrade IBM Power",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "AI on IBM Power",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 370,
        "y": 460,
        "wires": [
            [
                "3faa72adfc174f0f"
            ],
            [],
            [],
            []
        ]
    },
    {
        "id": "d7fd7d4aa2891bf4",
        "type": "ssh-v3",
        "z": "ac6e16ef.6f7d8",
        "name": "SSH to Techzone",
        "conf": "ecd3cb95e344f46a",
        "debug": false,
        "x": 610,
        "y": 480,
        "wires": [
            [
                "8c5b02cba20a4a2c"
            ]
        ]
    },
    {
        "id": "8d60d22123839791",
        "type": "http response",
        "z": "ac6e16ef.6f7d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 870,
        "y": 660,
        "wires": []
    },
    {
        "id": "313bbefd0570c78c",
        "type": "template",
        "z": "ac6e16ef.6f7d8",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!--\n# Copyright 2018 IBM\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n-->\n\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>\n\t  Seller Demos\n    </title>\n    <style>\n        {{{payload.style}}}\n    </style>\n  </head>\n  <body>\n\n    <div class=\"main\">\n      <div id=\"no-script\"class=\"bg-info\">\n        This application needs JavaScript enabled in your browser!\n      </div>\n<!--      <div id=\"id_contextdump\"></div>-->\n\n      <h1>Seller Demos</h1>\n      <div id=id_botchathistory>\n\t  </div>\n\t  \n\t  <div class =\"input\">\n\t      <form>\n            <label for=\"id_chattext\">Your Input: </label>\n            <input type=\"text\" name=\"chattext\" id=\"id_chattext\">\n          </form>\n\t      <button onclick=\"javascript:onChatClick()\" id=\"id_enter\">Send</button>\n\t  </div>\n    </div>\n    \n    <script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-2.1.4.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n\n    <script>{{{payload.script}}}</script>\n  </body>\n</html>\n",
        "x": 710,
        "y": 660,
        "wires": [
            [
                "8d60d22123839791"
            ]
        ]
    },
    {
        "id": "365e91acc62a0a16",
        "type": "template",
        "z": "ac6e16ef.6f7d8",
        "name": "JavaScript",
        "field": "payload.script",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "$(document).ready(function() {\n    javascriptCheck();\n//    $('#id_contextdump').hide();\n    enterbutton();\n    invokeAjax (\"Hello\");\n});\n\n// if javascript is enabled on the browser then can remove the warning message\nfunction javascriptCheck() {\n    $('#no-script').remove();\n}\n\n// creates div for interaction with bot      \nfunction createNewDiv(who, message) {\n    var emoji;\n    var html = '<div class=\"container\">';\n    if (who == \"Bot\") {\n        emoji = \"&#129302 Bot\";\n        html += '<div class=\"boticon\">' + emoji + '</div><div class=\"botspeak\">';\n    }\n    else if (who == \"Error\") {\n        emoji = \"&#128165 Error\";\n        html += '<div class=\"erricon\">' + emoji + '</div><div class=\"errspeak\">';\n    }\n    else if (who == \"You\") {\n        emoji = \"&#129489 You\";\n        html += '<div class=\"youicon\">' + emoji + '</div><div class=\"youspeak\">';\n    }\n    html +=  message;\n    html += '</div></div>'\n    return html;\n}\n\nfunction createCmdOut(message) {\n    var emoji;\n    var html = '<div class=\"container\">';\n    emoji = \"&#129302 Bot\";\n    html += '<div class=\"boticon\">' + emoji + '</div><div class=\"botspeak\">';\n    html += '<div class=\"cmdout\">';\n    html +=  message;\n    html += '</div></div></div>'\n    return html;\n}\n\n// appends latest communication with bot to botchathistory\nfunction chat(person, txt) {\n    $('#id_botchathistory').append(createNewDiv(person, txt));\n}    \n\nfunction CmdOut(txt) {\n    $('#id_botchathistory').append(createCmdOut(\"Command Output Goes Here\"));\n} \n\n// sets pressing of enter key to perform same action as send button\nfunction enterbutton(){\n    $(function() {\n        $(\"form input\").keypress(function (e) {\n        if ((e.which && e.which == 13) || (e.keyCode && e.keyCode == 13)) {\n             $('#id_enter').click();\n             return false;\n        } else {\n        return true;\n        }\n     });\n    });\n}\n\n// User has entered some text.\nfunction onChatClick() {\n    var txt = $('#id_chattext').val();\n    chat('You', txt); \n    invokeAjax(txt);\n    $('#id_chattext').val('');\n}\n\nfunction onDemoClick() {\n    var txt = $('#id_chattext').val();\n//    chat('You', txt); \n//    CmdOut(txt);\n    OutputToAjax(txt);\n    $('#id_chattext').val('');\n}\n\nfunction processOK(response) {\n    chat('Bot', response.botresponse.messageout.output.text);\n    OutputToAjax(txt);\n}\n      \nfunction processNotOK() {\n    chat('Error', 'Error whilst attempting to talk to Bot');\n}\n\nfunction processOKAndRepeat(response) {\n    chat('Bot', response.botresponse.messageout.output.text); \n}\n      \nfunction invokeAjax(message) {\n//    var contextdata = $('#id_contextdump').data('convContext');\n//    console.log('checking stashed context data');\n//    console.log(contextdata);\n        \n    var ajaxData = {};\n    ajaxData.msgdata = message;\n//    if (contextdata) {\n//        ajaxData.context = contextdata;    \n//    }\n\n    $.ajax({\n        type: 'POST',\n        url: 'seller_logic',\n        data: ajaxData,\n        success: processOK,\n        error: processNotOK\n    });\n}\n\nfunction OutputToAjax(message) {\n//    var contextdata = $('#id_contextdump').data('convContext');\n//    console.log('checking stashed context data');\n//    console.log(contextdata);\n        \n    var ajaxData = {};\n    ajaxData.msgdata = message;\n//    if (contextdata) {\n//        ajaxData.context = contextdata;    \n//    }\n\n    $.ajax({\n        type: 'POST',\n        url: 'run_demo',\n        data: ajaxData,\n        success: processOK,\n        error: processNotOK\n    })\n    \n    $.ajax({\n        type: 'POST',\n        url: 'return_output',\n        data: ajaxData,\n        success: processOKAndRepeat,\n    });\n}",
        "output": "str",
        "x": 530,
        "y": 660,
        "wires": [
            [
                "313bbefd0570c78c"
            ]
        ]
    },
    {
        "id": "0f03ad9dc0861abf",
        "type": "template",
        "z": "ac6e16ef.6f7d8",
        "name": "Stylesheet",
        "field": "payload.style",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "body {\n    font-size: 1em;\n    font-family: Arial, Helvetica, sans-serif;\n}\nh1 {\n    font-size: 2.5em;\n    color: black;\n    padding: 10px;\n}\n.main {\n    background-color:#cccccc;\n    border: 2px solid #222222;\n    border-radius: 20px;\n    padding: 10px;\n    margin: 50px;\n}\n.container {\n    border: 2px solid #333333;\n    background-color: #eeeeee;\n    border-radius: 20px;\n    padding: 10px;\n    margin: 10px;\n}\n.cmdout {\n    border: 2px solid #333333;\n    color: #FFFFFF;\n    background-color: #000000;\n    border-radius: 20px;\n    padding: 10px;\n    margin: 10px;\n}\nlabel {\n    margin: 20px 10px;\n}\ninput {\n    min-width: 60%;\n    padding: 5px;\n    margin: 5px;\n}\n.input {\n    text-align: center;\n}\n.container::after {\n    content: \"\";\n    clear: both;\n    display: table;\n}\n.boticon {\n    font-size: 2em;\n    width: 100px;\n    float: left;\n}\n.botspeak {\n    padding: 0px;\n    display: inline-block;\n    max-width: 80%;\n}\n.youicon {\n    font-size: 2em;\n    width: 100px;\n    float: right;\n    text-align: right;\n}\n.youspeak {\n    padding: 0px;\n    text-align: right;\n}\n.erricon {\n    font-size: 2em;\n    width: 200px;\n    float: left;\n    color: red;\n}\n.errspeak {\n    padding: 0px;\n    color: darkred;\n    display: inline-block;\n    max-width: 60%;\n}\nbutton {\n    min-width: 60%;\n    border-radius: 5px;\n    padding: 5px;\n    margin: 5px;\n    background-color: #dddddd;\n    color: black;\n}",
        "output": "str",
        "x": 330,
        "y": 660,
        "wires": [
            [
                "365e91acc62a0a16"
            ]
        ]
    },
    {
        "id": "a78fc060797a337a",
        "type": "http in",
        "z": "ac6e16ef.6f7d8",
        "name": "Seller Demo Home Page",
        "url": "/seller_home",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 660,
        "wires": [
            [
                "0f03ad9dc0861abf"
            ]
        ]
    },
    {
        "id": "155d16498cbb2fca",
        "type": "http in",
        "z": "ac6e16ef.6f7d8",
        "name": "Run Demo URL",
        "url": "/run_demo",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 960,
        "wires": [
            [
                "68a3f8f928b5db07"
            ]
        ]
    },
    {
        "id": "fb5024a554baea36",
        "type": "http response",
        "z": "ac6e16ef.6f7d8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1170,
        "y": 960,
        "wires": []
    },
    {
        "id": "31d561417692433b",
        "type": "comment",
        "z": "ac6e16ef.6f7d8",
        "name": "Show command output",
        "info": "",
        "x": 120,
        "y": 920,
        "wires": []
    },
    {
        "id": "d1c299d7eee1db13",
        "type": "ssh-v3",
        "z": "ac6e16ef.6f7d8",
        "name": "SSH to Techzone",
        "conf": "ecd3cb95e344f46a",
        "debug": false,
        "x": 530,
        "y": 960,
        "wires": [
            [
                "3b737319e18d9991"
            ]
        ]
    },
    {
        "id": "7570019af38606e3",
        "type": "template",
        "z": "ac6e16ef.6f7d8",
        "name": "HTML Template Return Cmd Out",
        "field": "payload.botresponse.messageout.output.text",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{#payload.botresponse.messageout.output.text}}\n<br>{{.}}\n{{/payload.botresponse.messageout.output.text}}\n",
        "output": "str",
        "x": 960,
        "y": 960,
        "wires": [
            [
                "fb5024a554baea36",
                "a265c06ae3fc09a8"
            ]
        ]
    },
    {
        "id": "df9b77914d832080",
        "type": "function",
        "z": "ac6e16ef.6f7d8",
        "name": "Set botresponse",
        "func": "var stdout=[];\nstdout = msg.session.stdout;\n\nmsg.payload = {};\nmsg.payload.botresponse = {};\nmsg.payload.botresponse.messageout = {};\nmsg.payload.botresponse.messageout.output = {};\nmsg.payload.botresponse.messageout.output.text = {};\n\nmsg.payload.botresponse.messageout.output.text = stdout\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 920,
        "wires": [
            [
                "7570019af38606e3"
            ]
        ]
    },
    {
        "id": "3faa72adfc174f0f",
        "type": "function",
        "z": "ac6e16ef.6f7d8",
        "name": "Set commands to run",
        "func": "let output_file = \"output.txt\";\nlet cmds = \"\";\ncmds = \"curl -O https://public.dhe.ibm.com/aix/freeSoftware/aixtoolbox/ezinstall/ppc/dnf_aixtoolbox.sh\";\ncmds += \" > \" + output_file + \" 2>&1; \"\ncmds += \"chmod 744 dnf_aixtoolbox.sh\";\ncmds += \" >> \" + output_file + \" 2>&1; \";\ncmds += \"sudo ./dnf_aixtoolbox.sh -y\";\ncmds += \" >> \" + output_file + \" 2>&1\";\n\nmsg.payload=\"\";\nmsg.payload = cmds;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 440,
        "wires": [
            [
                "d7fd7d4aa2891bf4"
            ]
        ]
    },
    {
        "id": "711df91327439328",
        "type": "template",
        "z": "ac6e16ef.6f7d8",
        "name": "HTML Template Run Demo",
        "field": "payload.botresponse.messageout.output.text",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{{#payload.botresponse.messageout.output.text}}\n<br>{{.}}\n{{/payload.botresponse.messageout.output.text}}\n{{#cmd}}\n<p>We are about to run the following commands:<br>{{.}}\n</p>\n{{/cmd}}\n<p>They may take a little while to run...</p>",
        "output": "str",
        "x": 1060,
        "y": 480,
        "wires": [
            [
                "636050ff.385e58"
            ]
        ]
    },
    {
        "id": "8c5b02cba20a4a2c",
        "type": "function",
        "z": "ac6e16ef.6f7d8",
        "name": "Reformat for response",
        "func": "cmd = \"\";\ncmd = msg.payload;\n\nmsg.cmd = \"\";\nmsg.cmd = cmd;\n\nmsg.payload={};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 480,
        "wires": [
            [
                "711df91327439328"
            ]
        ]
    },
    {
        "id": "68a3f8f928b5db07",
        "type": "function",
        "z": "ac6e16ef.6f7d8",
        "name": "Set up output snapshots",
        "func": "let output_file = \"output.txt\";\nlet tempout = \"tempout.txt\";\n\nlet cmds = \"\";\ncmds = \"cp \" + output_file + \" \" + tempout + \"; \";\ncmds += \"echo > \" + output_file + \"; \";\ncmds += \"cat \" + tempout;\n\nmsg.payload=\"\";\nmsg.payload = cmds;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 960,
        "wires": [
            [
                "d1c299d7eee1db13",
                "536ca356fcdef305"
            ]
        ]
    },
    {
        "id": "eed9c58c60d48df4",
        "type": "http in",
        "z": "ac6e16ef.6f7d8",
        "name": "Return output URL",
        "url": "/return_output",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 1000,
        "wires": [
            [
                "68d26655736617c6"
            ]
        ]
    },
    {
        "id": "68d26655736617c6",
        "type": "function",
        "z": "ac6e16ef.6f7d8",
        "name": "Output next snapshot",
        "func": "let output_file = \"output.txt\";\nlet tempout = \"tempout.txt\";\n\nlet cmds = \"\";\ncmds = \"sleep 5 ; \";\ncmds += \"size=`wc -c output.txt | awk '{print $1}'`;\";\ncmds += \"if [ $size -gt 1 ] ; then \";\ncmds += \"cp \" + output_file + \" \" + tempout + \";\";\ncmds += \"echo > \" + output_file + \";\";\ncmds += \"cat \" + tempout + \";\";\ncmds += \"fi\";\n\nmsg.payload=\"\";\nmsg.payload = cmds;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1000,
        "wires": [
            [
                "d1c299d7eee1db13",
                "211bd0a8f859d98d"
            ]
        ]
    },
    {
        "id": "536ca356fcdef305",
        "type": "debug",
        "z": "ac6e16ef.6f7d8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 920,
        "wires": []
    },
    {
        "id": "211bd0a8f859d98d",
        "type": "debug",
        "z": "ac6e16ef.6f7d8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 1040,
        "wires": []
    },
    {
        "id": "3b737319e18d9991",
        "type": "switch",
        "z": "ac6e16ef.6f7d8",
        "name": "",
        "property": "session.stdout",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 980,
        "wires": [
            [
                "df9b77914d832080"
            ],
            [
                "5f682370bc0aed41"
            ]
        ]
    },
    {
        "id": "a265c06ae3fc09a8",
        "type": "debug",
        "z": "ac6e16ef.6f7d8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 900,
        "wires": []
    },
    {
        "id": "5f682370bc0aed41",
        "type": "debug",
        "z": "ac6e16ef.6f7d8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 1040,
        "wires": []
    }
]
